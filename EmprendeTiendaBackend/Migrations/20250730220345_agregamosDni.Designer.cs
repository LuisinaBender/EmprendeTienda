// <auto-generated />
using System;
using BackendEmprendeTienda.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmprendeTiendaBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250730220345_agregamosDni")]
    partial class agregamosDni
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Service.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Dni")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("LocalidadId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Pérez",
                            Direccion = "Calle Falsa 123",
                            Email = "juan@example.com",
                            LocalidadId = 1,
                            Nombre = "Juan",
                            Telefono = "3815123456"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Gómez",
                            Direccion = "Avenida Siempre Viva 456",
                            Email = "maria@example.com",
                            LocalidadId = 2,
                            Nombre = "María",
                            Telefono = "3815234567"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "López",
                            Direccion = "Boulevard de los Sueños Rotos 789",
                            Email = "carlos@example.com",
                            LocalidadId = 3,
                            Nombre = "Carlos",
                            Telefono = "3815345678"
                        });
                });

            modelBuilder.Entity("Service.Models.DetalleVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VentaId");

                    b.ToTable("DetalleVentas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 2,
                            PrecioUnitario = 120000m,
                            ProductoId = 1,
                            VentaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 1,
                            PrecioUnitario = 80000m,
                            ProductoId = 2,
                            VentaId = 2
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 3,
                            PrecioUnitario = 45000m,
                            ProductoId = 3,
                            VentaId = 3
                        });
                });

            modelBuilder.Entity("Service.Models.Localidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Localidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Capital"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Güemes"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Rivadavia"
                        });
                });

            modelBuilder.Entity("Service.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 0m,
                            Descripcion = "Laptop de alto rendimiento para juegos",
                            Nombre = "Laptop Gamer",
                            Precio = 120000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 0m,
                            Descripcion = "Teléfono inteligente de última generación",
                            Nombre = "Smartphone",
                            Precio = 80000m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 0m,
                            Descripcion = "Tablet con pantalla HD",
                            Nombre = "Tablet",
                            Precio = 45000m,
                            Stock = 8
                        });
                });

            modelBuilder.Entity("Service.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 3,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Service.Models.Cliente", b =>
                {
                    b.HasOne("Service.Models.Localidad", "Localidad")
                        .WithMany("Clientes")
                        .HasForeignKey("LocalidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Localidad");
                });

            modelBuilder.Entity("Service.Models.DetalleVenta", b =>
                {
                    b.HasOne("Service.Models.Producto", "Producto")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Service.Models.Venta", "Venta")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Service.Models.Venta", b =>
                {
                    b.HasOne("Service.Models.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Service.Models.Cliente", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Service.Models.Localidad", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("Service.Models.Producto", b =>
                {
                    b.Navigation("DetalleVentas");
                });

            modelBuilder.Entity("Service.Models.Venta", b =>
                {
                    b.Navigation("DetalleVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
